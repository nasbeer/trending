{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useRepositories = () => {\n  _s();\n\n  const [repositories, setRepositories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const apiUrl = 'https://api.github.com/search/repositories';\n\n  const fetchRepos = async () => {\n    setLoading(true);\n    const response = await axios.get(apiUrl, {\n      params: {\n        sort: 'stars',\n        order: 'desc',\n        q: `created:<${new Date().toISOString()}`\n      }\n    });\n    const listData = response.data;\n    setRepositories(listData.items);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (!fetched) {\n      fetchRepos();\n      setFetched(true);\n    }\n  }, [fetched]);\n  return {\n    repositories,\n    loading\n  };\n};\n\n_s(useRepositories, \"d2gHYVGtsJidbiRFqw4W8LQcnP4=\");\n\nexport default useRepositories;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/trending/src/components/trending/useRepositories.js"],"names":["useState","useEffect","axios","useRepositories","repositories","setRepositories","loading","setLoading","fetched","setFetched","apiUrl","fetchRepos","response","get","params","sort","order","q","Date","toISOString","listData","data","items"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMU,MAAM,GAAG,4CAAf;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUH,MAAV,EAAkB;AACrCI,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,OADA;AAENC,QAAAA,KAAK,EAAE,MAFD;AAGNC,QAAAA,CAAC,EAAG,YAAW,IAAIC,IAAJ,GAAWC,WAAX,EAAyB;AAHlC;AAD6B,KAAlB,CAAvB;AAOA,UAAMC,QAAQ,GAAGR,QAAQ,CAACS,IAA1B;AACAhB,IAAAA,eAAe,CAACe,QAAQ,CAACE,KAAV,CAAf;AACAf,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAZD;;AAcAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACO,OAAJ,EAAY;AACRG,MAAAA,UAAU;AACVF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GALQ,EAKN,CAACD,OAAD,CALM,CAAT;AAOA,SAAO;AAACJ,IAAAA,YAAD;AAAeE,IAAAA;AAAf,GAAP;AACH,CA5BD;;GAAMH,e;;AA8BN,eAAeA,eAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst useRepositories = () => {\n    const [repositories, setRepositories] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [fetched, setFetched] = useState(false);\n    const apiUrl = 'https://api.github.com/search/repositories'\n    \n    const fetchRepos = async () => {\n      setLoading(true);\n      const response = await axios.get(apiUrl, {\n          params: {\n            sort: 'stars',\n            order: 'desc',\n            q: `created:<${new Date().toISOString()}`\n          }\n      });\n      const listData = response.data;\n      setRepositories(listData.items);\n      setLoading(false);\n    };\n\n    useEffect(() => {\n        if(!fetched){\n            fetchRepos();\n            setFetched(true);\n        }\n    }, [fetched]);\n\n    return {repositories, loading};\n};\n\nexport default useRepositories;"]},"metadata":{},"sourceType":"module"}